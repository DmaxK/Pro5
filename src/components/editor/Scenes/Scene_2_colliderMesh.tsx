/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 scene_2_colliderMesh.glb
*/

import React, { useRef, SetStateAction, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { Mesh, Vector3 } from 'three';

const ColliderScene2: React.FC<{
  setColliderScene2: React.Dispatch<SetStateAction<Mesh>>
}> = ({setColliderScene2}) => {
  const { nodes, materials } = useGLTF('./models/scene_2_colliderMesh.glb')
  const ref = useRef<Mesh | null>(null);
  setColliderScene2(new Mesh(nodes.scene2_collider.geometry));
  useEffect(() => {
    if(ref.current){
      setColliderScene2(new Mesh(nodes.scene2_collider.geometry));
    }
  },[ref])
  return (
    <></>
  )
}

useGLTF.preload('./models/scene_2_colliderMesh.glb')
export default ColliderScene2;
